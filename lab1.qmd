---
title: "eds_223_week1_lab"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
install.packages("sf")
install.packages("stars")
install.packages("tmap")
```

```{r}
library(sf) # for vector data (more soon!)
library(stars) # for raster data (more soon!)
library(tmap) # for static and interactive maps
library(here) #for file paths
```

```{r}
# raster of global elevations
world_elevation <- read_stars(here("data","worldelevation.tif"))

# country boundaries
world_vector <- read_sf(here("data","worldvector.gpkg"))

# major cities
world_cities <- read_sf(here("data","worldcities.gpkg"))
```

```{r}
# plotting a single spatial object
tm_shape(world_elevation) +
  tm_raster() +
tm_shape(world_vector) + # defines the spatial object to plot
  tm_polygons() +
  tm_shape(world_cities) +# defines how to plot the object, similar to geom_points()
  tm_dots()

```

```{r}
# plotting vector and raster spatial objects
# The order of the data you call in matter 

tm_shape(world_elevation) + # plot global elevations
  tm_raster() + # tm_raster for raster data
tm_shape(world_vector) +
  tm_borders() +
tm_shape(world_cities, bbox = world_cities )+
  tm_dots() +
  tm_text("name")
```

```{r}
tm_shape(world_elevation, bbox = c(-15, 35, 45, 65)) + # add bounding box to restrict extent
  tm_raster() + 
tm_shape(world_vector) +
  tm_borders() 
```

```{r}
tm_shape(world_vector) +
  tm_polygons(col = "red",
              boarder.col = "black",
              lwd = 0.5,
              lty = "dashed")
```

```{r}
tm_shape(world_vector) +
  tm_borders(col = "red")

```

```{r}
tm_shape(world_vector) +
  tm_fill(col = "purple")
```

```{r}
# fill polygons with a color palette representing a variable

tm_shape(world_vector) +
  tm_fill("CO2_emissions")
```

```{r}
tm_shape(world_cities) +
  tm_symbols()
```

```{r}
tm_shape(world_vector) +
  tm_polygons("life_expectancy",
              palette = c("yellow", "darkgreen"),
              title = "Life Expectancy (years)")
```

```{r}
 #install.packages("viridisLite")
library(viridisLite)
```

```{r}
tm_shape(world_vector) +
  tm_polygons("life_expectancy",
              palette = viridis(option = "magma", 10),
              title = "life expectancy in years")

```

```{r}
tm_shape(world_vector) +
  tm_polygons() +
  tm_shape(world_cities) +
  tm_symbols(size = "pop2020",
             legend.size.is.portrait = TRUE) #tells tm how to plot cities
  
```

```{r}
tm_shape(world_vector) +
  tm_graticules() + #adds lat long grid
  tm_fill() 
```

```{r}
tm_shape(world_vector) +
  tm_fill() +
  tm_scale_bar() +
  tm_compass(position = c("left", "top"))
```

```{r}
tmap_mode("view") #makes it so we can interact with map
map1 <- tm_shape(world_vector) +
  tm_fill(col = "wb_income_region",
          palette = viridisLite::plasma(5),
          title = "Regional income") +
  tm_layout(bg.color = "gray96",
            main.title = "Global income by country",
            frame = FALSE)

tmap_mode("plot") #sets it back to static

tmap_save(map1, here("tmap_example.png"))
  
```
